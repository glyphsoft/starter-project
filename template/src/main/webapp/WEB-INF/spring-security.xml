<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<!-- Pay attention to the version of Spring Security being used -->
	<!-- The .xsd file declared in xsi:schemaLocation should match the version 
		you are using -->
	<!-- If you are using spring security 3.0, then the xsd should use 3.0.xsd -->


	<!-- auto-config sets up the following authentication -->
	<!-- 1. HTTP basic authentication -->
	<!-- 2. Form login authentication -->
	<!-- 3. Logout -->

	<!-- Remember me implementation steps: -->
	<!-- 1. Set the "access-decision-manager-ref" attribute -->
	<!-- in HttpElement to "affirmativeBased" -->
	<!-- 2. Add remember me element -->
	<!-- "<remember-me key="app"/>" -->
	<http auto-config="true">

		<intercept-url pattern="/login.do" access="IS_AUTHENTICATED_ANONYMOUSLY" />

		<intercept-url pattern="/*" access="ROLE_USER" />

		<logout invalidate-session="true" logout-success-url="/"
			logout-url="/j_spring_security_logout" />

		<form-login login-page="/login.do" />

		<!-- <remember-me key="app" /> -->

		<session-management session-fixation-protection="migrateSession">
			<!-- Concurrency will not work if custom UserDetails' hashcode() and equals() 
				are not implemented -->
			<!-- Make sure the above methods are implemented -->
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management>

	</http>

	<authentication-manager alias="authenticationManager">
	<authentication-provider>
	<user-service>
	<user name="guest" authorities="ROLE_USER" password="guest" />
	</user-service>
	</authentication-provider>
	</authentication-manager>

	<!-- <authentication-manager alias="authenticationManager"> -->
	<!-- <authentication-provider user-service-ref="userService"> -->
	<!-- </authentication-provider> -->
	<!-- </authentication-manager> -->


<!-- 	<beans:bean id="passwordEncoder" -->
<!-- 		class="org.springframework.security.crypto.password.StandardPasswordEncoder" /> -->


<!-- 	<beans:bean id="daoAuthenticationProvider" -->
<!-- 		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> -->
<!-- 		<beans:property name="userDetailsService" ref="userDetailsService" /> -->
<!-- 		<beans:property name="passwordEncoder" ref="passwordEncoder" /> -->
<!-- 	</beans:bean> -->

<!-- 	<authentication-manager alias="authenticationManager"> -->
<!-- 		<authentication-provider ref="daoAuthenticationProvider" /> -->
<!-- 	</authentication-manager> -->

	<!-- Usernames/Passwords are rod/koala dianne/emu scott/wombat peter/opal -->

	<!-- <authentication-manager> -->
	<!-- <authentication-provider> -->
	<!-- <password-encoder ref="encoder" /> -->
	<!-- <user-service> -->
	<!-- <user name="rod" -->
	<!-- password="4efe081594ce25ee4efd9f7067f7f678a347bccf2de201f3adf2a3eb544850b465b4e51cdc3fcdde" -->
	<!-- authorities="supervisor, ROLE_USER, teller" /> -->
	<!-- <user name="dianne" -->
	<!-- password="957ea522524a41cbfb649a3e293d56268f840fd5b661b499b07858bc020d6d223f912e3ab303b00f" -->
	<!-- authorities="ROLE_USER,teller" /> -->
	<!-- <user name="scott" -->
	<!-- password="fb1f9e48058d30dc21c35ab4cf895e2a80f2f03fac549b51be637196dfb6b2b7276a89c65e38b7a1" -->
	<!-- authorities="ROLE_USER" /> -->
	<!-- <user name="peter" -->
	<!-- password="e175750688deee19d7179d444bfaf92129f4eea8b4503d83eb8f92a7dd9cda5fbae73638c913e420" -->
	<!-- authorities="ROLE_USER" /> -->
	<!-- </user-service> -->
	<!-- </authentication-provider> -->
	<!-- </authentication-manager> -->





</beans:beans>